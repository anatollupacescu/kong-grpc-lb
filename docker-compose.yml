version: '3'

services:
  csvhosting:
    image: csvhosting
    ports:
    - 8080:8080
    networks: 
    - "atlant"

  mongo:
    image: mongo
    hostname: mongo
    ports:
      - 27017:27017
    environment:
      - MONGO_INITDB_DATABASE=price
    networks: 
    - "atlant"

  api-1:
    image: atlant_api:latest
    depends_on:
      - 'mongo'
    ports:
      - "50052:50051"
    environment:
      MONGODB_URL: mongodb://mongo:27017/price
    restart: always
    networks: 
    - "atlant"

  api-2:
    image: atlant_api:latest
    depends_on:
      - 'mongo'
    ports:
      - "50053:50051"
    environment:
      MONGODB_URL: mongodb://mongo:27017/price
    restart: always
    networks: 
    - "atlant"

  kong:
    image: kong
    user: kong
    depends_on:
      - db
    environment:
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: '0.0.0.0:8001'
      KONG_ADMIN_LISTEN_SSL: '0.0.0.0:8444'
      KONG_DATABASE: postgres
      KONG_PG_DATABASE: kong
      KONG_PG_HOST: db
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_PROXY_LISTEN: '0.0.0.0:9080 http2, 0.0.0.0:9081 http2 ssl'
    networks:
      - atlant
    ports:
      - "8000:8000/tcp"
      - "8443:8443/tcp"
      - "8001:8001/tcp"
      - "9080:9080/tcp"
      - "9081:9081/tcp"
      # - "127.0.0.1:8001:8001/tcp"
      # - "127.0.0.1:8444:8444/tcp"
    healthcheck:
      test: ["CMD", "kong", "health"]
      interval: 10s
      timeout: 10s
      retries: 10
    restart: on-failure

  db:
    image: postgres:9.6
    environment:
      POSTGRES_DB: kong
      POSTGRES_USER: kong
      POSTGRES_PASSWORD: kong
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "kong"]
      interval: 30s
      timeout: 30s
      retries: 3
    restart: on-failure
    stdin_open: true
    tty: true
    networks:
      - atlant

  kong-migrations:
    image: kong
    command: kong migrations bootstrap
    depends_on:
      - db
    environment:
      KONG_DATABASE: postgres
      KONG_PG_DATABASE: kong
      KONG_PG_HOST: db
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong
    networks:
      - atlant
    restart: on-failure

  kong-migrations-up:
    image: kong
    command: kong migrations up && kong migrations finish
    depends_on:
      - db
    environment:
      KONG_DATABASE: postgres
      KONG_PG_DATABASE: kong
      KONG_PG_HOST: db
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong
    networks:
      - atlant
    restart: on-failure

networks: 
    atlant: